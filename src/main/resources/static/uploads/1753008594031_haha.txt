-- ========================
-- 1. Roles
-- ========================
CREATE TABLE Roles (
    RoleID INT PRIMARY KEY IDENTITY,
    RoleName NVARCHAR(50) NOT NULL
);

-- ========================
-- 2. Users
-- ========================
CREATE TABLE Users (
    UserID INT PRIMARY KEY IDENTITY,
    Username NVARCHAR(50) UNIQUE NOT NULL,
    Email VARCHAR(100) UNIQUE NOT NULL,
    PasswordHash VARCHAR(255),
    GoogleID NVARCHAR(100),
    RoleID INT NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
);

-- ========================
-- 3. UserSessions
-- ========================
CREATE TABLE UserSessions (
    SessionID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL,
    Token VARCHAR(255) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    ExpiredAt DATETIME,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- ========================
-- 4. GameGenres
-- ========================
CREATE TABLE GameGenres (
    GenreID INT PRIMARY KEY IDENTITY,
    Name NVARCHAR(50) NOT NULL
);

-- ========================
-- 5. Games
-- ========================
CREATE TABLE Games (
    GameID INT PRIMARY KEY IDENTITY,
    Title NVARCHAR(100) NOT NULL,
    Description NVARCHAR(500),
    ThumbnailUrl NVARCHAR(255),
    GenreID INT NOT NULL,
    CreatedBy INT NOT NULL,
    IsApproved BIT DEFAULT 0,
    IsVisible BIT DEFAULT 1,
	 GameUrl NVARCHAR(500),
	GameType NVARCHAR(50),
    CreatedAt DATETIME DEFAULT GETDATE(),

    FOREIGN KEY (GenreID) REFERENCES GameGenres(GenreID),
    FOREIGN KEY (CreatedBy) REFERENCES Users(UserID)
);

-- ========================
-- 6. GameSessions
-- ========================
CREATE TABLE GameSessions (
    SessionID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL,
    GameID INT NOT NULL,
    Score INT NOT NULL,
    PlayedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (GameID) REFERENCES Games(GameID)
);

-- ========================
-- 7. ScoreBoard
-- ========================
CREATE TABLE ScoreBoard (
    ScoreID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL,
    GameID INT NOT NULL,
    HighScore INT NOT NULL,
    lastPlayed DATETIME,
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (GameID) REFERENCES Games(GameID)
);

-- ========================
-- 8. FavoriteGames
-- ========================
CREATE TABLE FavoriteGames (
    FavoriteID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL,
    GameID INT NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (GameID) REFERENCES Games(GameID)
);

-- ========================
-- 9. GameRatings
-- ========================
CREATE TABLE GameRatings (
    RatingID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL,
    GameID INT NOT NULL,
    Rating INT CHECK (Rating BETWEEN 1 AND 5),
    Comment NVARCHAR(500),
    RatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (GameID) REFERENCES Games(GameID)
);

-- ========================
-- 10. ForumPosts
-- ========================
CREATE TABLE ForumPosts (
    PostID INT PRIMARY KEY IDENTITY,
    UserID INT NOT NULL,
    Title NVARCHAR(200) NOT NULL,
    Content TEXT NOT NULL,
    imageUrl VARCHAR(255) NULL,
    IsApproved BIT DEFAULT 0,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- ========================
-- 11. ForumComments
-- ========================
CREATE TABLE ForumComments (
    CommentID INT PRIMARY KEY IDENTITY,
    PostID INT NOT NULL,
    UserID INT NOT NULL,
    Content NVARCHAR(500) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (PostID) REFERENCES ForumPosts(PostID),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

-- ========================
-- 12. GameFileSubmissions
-- ========================
CREATE TABLE GameFileSubmissions (
    SubmissionID INT PRIMARY KEY IDENTITY,
    DeveloperID INT NOT NULL,
    FileUrl NVARCHAR(255) NOT NULL,
    Description NVARCHAR(500),
    Status NVARCHAR(20) DEFAULT 'Pending', -- Pending, Approved, Rejected
    AdminNote NVARCHAR(500),
    SubmittedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (DeveloperID) REFERENCES Users(UserID)
);


CREATE TABLE MonthlyStatistics (
    MonthID INT PRIMARY KEY IDENTITY,
    MonthYear VARCHAR(7), -- Ví dụ: '2025-07'
    TotalUsers INT,
    TotalGames INT,
    TotalGamePlays INT,
    TopUserID INT,
    TopUserScore INT,
    TopGameID INT,
    TopGamePlayCount INT,
    TotalForumPosts INT,
    CreatedAt DATETIME DEFAULT GETDATE(),

    FOREIGN KEY (TopUserID) REFERENCES Users(UserID),
    FOREIGN KEY (TopGameID) REFERENCES Games(GameID)
);
